{"version":3,"sources":["Filter.js","PersonForm.js","Person.js","services/persons.js","App.js","index.js"],"names":["Filter","filterName","handleFilter","className","value","onChange","PersonForm","addPerson","newName","handleNameAddition","newNumber","handleNumberAddition","onSubmit","type","Person","person","deletePerson","key","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterName","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","personService","initialPersons","ErrorNotification","message","SuccessNotification","event","target","preventDefault","nameObject","nameExists","find","window","confirm","returnedPerson","map","setTimeout","concat","length","filter","toLowerCase","includes","p","catch","error","deletionOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5706de4c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filterName, handleFilter}) => {\n  return (\n      <div className='filter'>Filter Names:\n      <input className='input'\n          value={filterName}\n          onChange={handleFilter}\n        />\n      </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNameAddition, newNumber, handleNumberAddition }) => {\n  return (\n    <div>\n      <form className='person_form'onSubmit={addPerson}>\n      <h2>Add New Number</h2>\n        <div>Name:\n        <input className='input'\n          value={newName}\n          onChange={handleNameAddition}\n        />\n        </div>\n        <br/>\n        <div>Number:\n        <input className='input'\n          value={newNumber}\n          onChange={handleNumberAddition}\n        />\n        </div>\n        <br/>\n        <button className='button' type='submit'>Add</button>\n      </form>  \n      </div>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n  const label = 'Delete'\n\n  return (\n    <p className='person'>\n      {person.key}\n      {person.name} <br />\n      {person.number}\n    <button className='button_del' onClick={deletePerson}>{label}</button>\n    </p>\n  )\n}\n\nexport default Person","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  // const getAll = () => {\n  //   const request = axios.get(baseUrl)\n  //   const nonExisting = {\n  //     id: 10000,\n  //     name: 'This name is not saved to server',\n  //     number: '050-2345678',\n  //     important: true,\n  //   }\n  //   return request.then(response => response.data.concat(nonExisting))\n  // }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\n  const deleteContact = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n  \n  export default { getAll, create, update, deleteContact }","import React, { useState, useEffect } from 'react'\r\nimport Filter from './Filter'\r\nimport PersonForm from './PersonForm'\r\nimport Person from './Person'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filterName, setFilterName ] = useState('')\r\n  const [ errorMessage, setErrorMessage ] = useState('')\r\n  const [ successMessage, setSuccessMessage ] = useState('')\r\n\r\n  // then is an event listener & response function is an event handler\r\n  useEffect(() => {\r\n    personService\r\n    .getAll()\r\n    .then(initialPersons => {\r\n      setPersons(initialPersons)\r\n    })\r\n  }, [])\r\n  // Jos toisena parametrina on tyhjä taulukko [], suoritetaan efekti ainoastaan komponentin ensimmäisen renderöinnin jälkeen.\r\n\r\n  const handleNameAddition = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberAddition = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilter = (event) => {\r\n    setFilterName(event.target.value)\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const nameObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n    const nameExists = persons.find(person => person.name === nameObject.name)\r\n    if (nameExists) {\r\n      if (window.confirm(`${newName} already exists. Replace the number with a new one?`)) {\r\n        personService\r\n          .update(nameExists.id, nameObject).then(returnedPerson => {\r\n            setPersons(persons.map(person => person.id !== nameExists.id ? person : returnedPerson))\r\n            setSuccessMessage(\r\n              `Number of ${nameExists.name} was updated`\r\n            )\r\n          })\r\n          setTimeout(() => {\r\n            setSuccessMessage(null)\r\n          }, 3000)\r\n      }\r\n    } else {\r\n    personService\r\n    .create(nameObject)\r\n    .then(returnedPerson => {\r\n      setPersons(persons.concat(returnedPerson))\r\n    }\r\n    )\r\n    \r\n    setNewName('')\r\n    setNewNumber('')\r\n    setSuccessMessage(\r\n      `${newName} was added`\r\n    )\r\n    setTimeout(() => {\r\n      setSuccessMessage(null)\r\n    }, 3000)\r\n    }\r\n  }\r\n\r\n  const deletionOf = (id) => {\r\n    const url = `http://localhost:3001/persons/${id}`\r\n    const person = persons.find(p => p.id === id)\r\n  \r\n    if (window.confirm(`Do you really want to delete ${person.name}?`)) {\r\n    personService\r\n    .deleteContact(id)\r\n    .then(\r\n      setPersons(persons.filter(p => p.id !== id))\r\n    )\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `${person.name} was already removed from server`\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    })\r\n    setSuccessMessage(\r\n      `Number of ${person.name} was deleted`\r\n    )\r\n    setTimeout(() => {\r\n      setSuccessMessage(null)\r\n    }, 3000)\r\n    }\r\n  }\r\n\r\n  const ErrorNotification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className='error'>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const SuccessNotification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className='success'>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nreturn (\r\n  <div>\r\n    <h1>Phonebook</h1>\r\n    {!errorMessage ? null : <ErrorNotification message={errorMessage} />}\r\n    {!successMessage ? null : <SuccessNotification message={successMessage} />}\r\n    <Filter filterName={filterName} handleFilter={handleFilter} />\r\n    <PersonForm addPerson={addPerson} newName={newName} handleNameAddition={handleNameAddition} newNumber={newNumber} handleNumberAddition={handleNumberAddition} />\r\n    <div> \r\n      <h2>Numbers</h2>\r\n       <span>{filterName.length > 1 ? persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase())).map(person => \r\n            <Person key={person.id} person={person} />) : persons.map(person => \r\n              <Person key={person.id} person={person} deletePerson={() => deletionOf(person.id)}\r\n                />)\r\n              }\r\n      </span> \r\n    </div>\r\n  </div>\r\n)\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}